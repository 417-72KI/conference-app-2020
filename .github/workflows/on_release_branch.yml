name: Run jobs on release branches when pushed

on: 
  push:
    branches:
      - master
      - release/*

jobs:
  build-debug:
    runs-on: macOS-10.14
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '8'
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-m2-${{ hashFiles('**/*.gradle.kts') }}-
          ${{ runner.os }}-m2-
    - run: ./gradlew android-base:assembleDebug
      shell: bash
    - run: echo "::set-output name=path::$(find android-base -name '*.apk' | head -1)"
      id: find-apk
    - name: Store an apk to GitHub
      uses: actions/upload-artifact@v1
      with:
        name: apk
        path: ${{ steps.find-apk.outputs.path }}

  deploy-debug:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=version::$(cat .ruby-version)"
        id: ruby
      - name: Download an apk file
        uses: actions/download-artifact@v1
        with:
          name: apk
          path: download-artifacts
      - run: echo "::set-output name=path::$(find download-artifacts -name '*.apk' | head -1)"
        id: find-apk
      - name: Summarize this build
        id: summary
        shell: bash
        run: |
          echo -n "::set-output name=message::"
          echo -n 'DEV / '
          if [ -n "${GITHUB_HEAD_REF:-}" ]; then
            echo -n "a contributor kicked "
          else
            echo -n "a member kicked "
          fi
          echo "${GITHUB_SHA:0:6}"
      - uses: jmatsu/dg-upload-app-action@0.1
        with:
          app_owner_name: ${{ secrets.DEPLOYGATE_APP_OWNER_NAME }}
          api_token: ${{ secrets.DEPLOYGATE_API_TOKEN }}
          app_file_path: ${{ steps.find-apk.outputs.path }}
          message: ${{ steps.summary.outputs.message }}
          release_note: This build is a debug-flavor build and not for production. ${{ steps.summary.outputs.message }}
          distribution_find_by: id
          distribution_id: 5a2b137dfa246bb75efbf06d8f08dd7e2a6ced69

  test:
    env:
      JUNIT_TEST_RESULT_DIR: test-results/junit
      JUNIT_TEST_REPORT_DIR: test-reports/
    runs-on: macOS-10.14
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '8'
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-m2-${{ hashFiles('**/*.gradle.kts') }}-
          ${{ runner.os }}-m2-
    - run: ./gradlew lintDebug testDebug --continue
      shell: bash
    - name: Collect test results
      if: always()
      shell: bash
      run: |
        mkdir -p ${{ env.JUNIT_TEST_RESULT_DIR }}
        find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ${{ env.JUNIT_TEST_RESULT_DIR }}/ \;
    - name: Store test results to GitHub
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: test-results
        path: ${{ env.JUNIT_TEST_RESULT_DIR }}
    - name: Collect test reports
      if: always()
      shell: bash
      run: |
        mkdir -p ${{ env.JUNIT_TEST_REPORT_DIR }}
        while read dirpath; do
          cp -r $dirpath ${{ env.JUNIT_TEST_REPORT_DIR }}/$(echo $dirpath | sed -e 's/^\.\///g' -e 's/\//-/g')
        done < <(find . -type d -regex ".*/build/reports")
    - name: Store test reports to GitHub
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: test-reports
        path: ${{ env.JUNIT_TEST_REPORT_DIR }}
