version: 2.1

executors: &executors
  android:
    docker:
      - image: circleci/android:api-28
    working_directory: ~/conference-app-2020
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx3072m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError" -Dorg.gradle.daemon=false'

  ruby:
    docker:
      - image: circleci/ruby:2.5.1
    working_directory: ~/conference-app-2020

commands: &commands
  setup_workspace:
    steps:
      - checkout
      - run: "$(git rev-parse --show-toplevel)/.circleci/init_ci_stuff"

  change_working_directory:
    parameters:
      path:
        type: string
        description: An absolete path or a relative path from the current working directory
      steps:
        type: steps
    steps:
    - run: working_directory << parameters.path >>
    - << parameters.steps >>
    - run: working_directory

  use_ruby_cache:
    parameters:
      key-prefix:
        type: string
        description: a prefix of a cache key
      cache_version:
        type: string
        default: v1
        description: a version of a cache. It's useful to specify any string while debugging ci stuff.
      gemfile-dir:
        type: string
        description: a relative/absolete path to a directory which has Gemfile
      steps:
        type: steps
        default: []
        description: steps to be executed after bundle artifacts. This parameter is not required but just for adding a *scope*.
    steps:
    - run: md5sum <(ruby -v) > ./ruby-version.md5
    - restore_cache:
        keys:
          - ruby-{{ checksum "./ruby-version.md5" }}-<< parameters.key-prefix >>-<< parameters.cache_version >>-{{ checksum "<< parameters.gemfile-dir >>/Gemfile.lock" }}
          - ruby-{{ checksum "./ruby-version.md5" }}-<< parameters.key-prefix >>-<< parameters.cache_version >>-
          - ruby-{{ checksum "./ruby-version.md5" }}-<< parameters.key-prefix >>-
    - run: cd << parameters.gemfile-dir >>; bundle check || bundle install --clean --jobs=4 --path vendor/bundle
    - save_cache:
        paths:
          - << parameters.gemfile-dir >>/vendor/bundle
        key: ruby-{{ checksum "./ruby-version.md5" }}-<< parameters.key-prefix >>-<< parameters.cache_version >>-{{ checksum "<< parameters.gemfile-dir >>/Gemfile.lock" }}
    - << parameters.steps >>

  use_gradle_cache:
    parameters:
      key-prefix:
        type: string
        description: a prefix of a cache key
      cache_version:
        type: string
        default: v1
        description: a version of a cache. It's useful to specify any string while debugging ci stuff.
      steps:
        type: steps
        default: []
        description: steps to be executed after bundle artifacts. This parameter is not required but just for adding a *scope*.
    steps:
      - run: ./scripts/check_sum.bash > all-gradle.md5
      - restore_cache:
          keys:
            - gradle-<< parameters.key-prefix >>-<< parameters.cache_version >>-{{ checksum "all-gradle.md5" }}
            - gradle-<< parameters.key-prefix >>-<< parameters.cache_version >>-
            - gradle-<< parameters.key-prefix >>-
      - run: ./scripts/prepare_release_build.bash
      - run: ./gradlew androidDependenciesExtra dependenciesExtra
      - save_cache:
          paths:
            - ~/.android
            - ~/.gradle
            - .gradle
            - ~/.m2
          key: gradle-<< parameters.key-prefix >>-<< parameters.cache_version >>-{{ checksum "all-gradle.md5" }}
      - << parameters.steps >>

orbs:
  android:
    commands: *commands
    executors: *executors
    jobs:
      assertions:
        executor: android
        steps:
          - setup_workspace
          - run: echo 'Waiting for danger...'

      create-apk:
        executor: android
        parameters:
          build-flavor:
            type: string
          after-steps:
            type: steps
            default: []
            description: Steps to be executed after creating apk.
        steps:
          - setup_workspace
          - use_gradle_cache:
              key-prefix: 'assemble'
              steps:
                - run:
                    name: Assemble apk
                    command: |
                      build_flavor="<< parameters.build-flavor >>"
                      ./gradlew ":android-base:assemble${build_flavor^}" \
                        --offline \
                        -PdisablePreDex \
                        -x "android-base:lintVital${build_flavor^}"
                - store_artifacts:
                    path: android-base/build/outputs/mapping/release/mapping.txt
                - store_artifacts:
                    path: android-base/build/outputs/apk
          - change_working_directory:
              path: .circleci/scripts
              steps:
                - run: curl -sL "https://raw.githubusercontent.com/jmatsu/dpg/master/install.bash" | bash; dpg -v
          - run: dpg procedure app-manage on-feature-branch --app "$(find_apks | head -1)" --android
          - << parameters.after-steps >>


jobs_filter:
  only_release: &only_release
    filters:
      branches:
        only: /release/
  except_release: &except_release
    filters:
      branches:
        ignore: /release/

workflows:
  version: 2
  feature-deployment:
    jobs:
      - android/create-apk:
          build-flavor: debug
          <<: *except_release
      - android/assertions:
          <<: *except_release
  release-deployment:
    jobs:
      - android/create-apk:
          build-flavor: release
          <<: *only_release
